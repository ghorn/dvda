Name:                dvda
Version:             0.1
License:             BSD3
License-file:        LICENSE
Author:              Greg Horn
Maintainer:          gregmainland@gmail.edu
Stability:           Experimental
Category:            Math
Build-type:          Simple
Synopsis:            Automatic differentiation on symbolic expression trees.
Cabal-version:       >= 1.6
Description: {
DVDA Verifiably Differentiates Algorithmically
.
This library provides a symbolic type `Numeric.Dvda.Expr.Expr` which is
manipulated mathematically through its Num\/Fractional\/Floating instances.
Expr can be a scalar, vector, or matrix. For ease of writing equations,
binary operations (adding\/multiplying\/etc) on a (scalar, vector) or (scalar, matrix)
automatically operates elementwise.
.
Trying to add a vector to a matrix will cause a runtime exception. Dimensions are 
checked at runtime when adding\/multiplying\/etc vector to vector or matrix to matrix.
.
Automatic differentiation functions can be called on `Numeric.Dvda.Expr.Expr`s.
.
C-code can be automatically generated, compiled, linked, and called at runtime.
.
Pretty graphviz plots!
}

source-repository head
  type: git
  location: git://github.com/ghorn/dvda.git
--  tag: 

Flag stressTest
  Description: Build a profilable hard executable
  Default: False

Library
  Exposed-modules:   Numeric.Dvda
                     Numeric.Dvda.Symbolic
                     Numeric.Dvda.Dim
                     Numeric.Dvda.AD
                     Numeric.Dvda.Vis
                     Numeric.Dvda.Function
                     Numeric.Dvda.Examples
--                     Numeric.Dvda.Tests.Tests

  Other-modules:     Numeric.Dvda.Internal.Expr
                     Numeric.Dvda.Internal.Tensor
                     Numeric.Dvda.Internal.BinaryType
                     Numeric.Dvda.Internal.UnaryType
                     Numeric.Dvda.Internal.GNode
                     Numeric.Dvda.Internal.ExprGraph
                     Numeric.Dvda.Internal.ExprUtils
                     Numeric.Dvda.AD.Dual
                     Numeric.Dvda.AD.Rad
                     Numeric.Dvda.AD.Fad
                     Numeric.Dvda.Config
                     Numeric.Dvda.Codegen.Codegen
                     Numeric.Dvda.Codegen.CallWrapper
                     Numeric.Dvda.Codegen.WriteC

                     Dvda.BinUn
                     Dvda.Expr
                     Dvda.Graph
                     Dvda.SymMonad
                     Dvda.Dual
                     Dvda.Examples

  Build-depends:     base       >= 4     && < 5,
                     graphviz,
                     fgl,
                     text,
                     directory,
                     MissingH,
                     process,
                     unix,
                     QuickCheck,
                     containers,
                     transformers >= 0.2 && < 0.3,
                     mtl >= 2.0 && < 2.1,
                     hashable  >= 1.1 && < 1.2,
                     unordered-containers  >= 0.2 && < 0.3,
                     vector  >= 0.9 && < 0.10,
                     repa  >= 3.0 && < 3.1
  Ghc-options:       -O2 -Wall


Executable stressTest
  if flag(stressTest)
     Buildable: True
  else
     Buildable: False

  Main-Is:           StressTest.hs

  Ghc-Options: -O2

  GHC-Prof-Options: -auto-all -caf-all -rtsopts
